import sqlite3
from unittest import TestCase

from GetDataFromDB import GetDataFromDB
from Strategies import Strategies


class TestStrategies(TestCase):
    connection = sqlite3.connect('example.db')
    cursor = connection.cursor()

    date = 20230219
    TestDate = 20230124

    getDataDB = GetDataFromDB()
    getDataDB.get_names_of_companies_and_store(cursor)
    getDataDB.get_all_datas_and_store(cursor)

    def test_bullish_engulfing_print(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bullish_engulfing_print()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'زماهان'), (3, ' : ', 'فخاس'), (4, ' : ', 'زكشت'),
                    (5, ' : ', 'تسه0001'), (6, ' : ', 'بالاس'), (7, ' : ', 'سيتا'), (8, ' : ', 'كخاك'),
                    (9, ' : ', 'فالوم'), (10, ' : ', 'شغدير'), (11, ' : ', 'كپرور'), (12, ' : ', 'زدشت'),
                    (13, ' : ', 'وهور'), (14, ' : ', 'جم پيلن'), (15, ' : ', 'شسينا'), (16, ' : ', 'واتي'),
                    (17, ' : ', 'دشيمي'), (18, ' : ', 'خچرخش'), (19, ' : ', 'غاذر'), (20, ' : ', 'شيران'),
                    (21, ' : ', 'اتكاي'), (22, ' : ', 'تپمپي'), (23, ' : ', 'شرانل'), (24, ' : ', 'ولساپا'),
                    (25, ' : ', 'كايتا'), (26, ' : ', 'دسانكو'), (27, ' : ', 'كاذر'), (28, ' : ', 'تكنار'),
                    (29, ' : ', 'فسرب'), (30, ' : ', 'زبينا'), (31, ' : ', 'آريا'), (32, ' : ', 'فتوسا'),
                    (33, ' : ', 'گنگين'), (34, ' : ', 'تسه0003'), (35, ' : ', 'ولكار'), (36, ' : ', 'سرو')]
        self.assertEqual(result, expected)

    def test_bullish_engulfing_with_five_min_percent_body(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bullish_engulfing_with_five_min_percent_body()
        expected = [(1, ' : ', 'زماهان'), (2, ' : ', 'زكشت'), (3, ' : ', 'فالوم'), (4, ' : ', 'كپرور'),
                    (5, ' : ', 'شسينا'), (6, ' : ', 'دشيمي'), (7, ' : ', 'غاذر'), (8, ' : ', 'تپمپي'),
                    (9, ' : ', 'كايتا'), (10, ' : ', 'فسرب'), (11, ' : ', 'زبينا')]
        self.assertEqual(result, expected)

    def test_hammer_and_bullish_engulfing(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.hammer_and_bullish_engulfing()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'كپرور'), (3, ' : ', 'تكنار')]
        self.assertEqual(result, expected)

    def test_bearish_and_engulfing(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_engulfing()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'زماهان'), (3, ' : ', 'فخاس'), (4, ' : ', 'زكشت'),
                    (5, ' : ', 'بالاس'), (6, ' : ', 'سيتا'), (7, ' : ', 'كخاك'), (8, ' : ', 'فالوم'),
                    (9, ' : ', 'شغدير'), (10, ' : ', 'كپرور'), (11, ' : ', 'زدشت'), (12, ' : ', 'وهور'),
                    (13, ' : ', 'واتي'), (14, ' : ', 'دشيمي'), (15, ' : ', 'خچرخش'), (16, ' : ', 'غاذر'),
                    (17, ' : ', 'شيران'), (18, ' : ', 'اتكاي'), (19, ' : ', 'ولساپا'), (20, ' : ', 'كايتا'),
                    (21, ' : ', 'دسانكو'), (22, ' : ', 'كاذر'), (23, ' : ', 'فسرب'), (24, ' : ', 'زبينا'),
                    (25, ' : ', 'آريا'), (26, ' : ', 'فتوسا'), (27, ' : ', 'گنگين'), (28, ' : ', 'ولكار'),
                    (29, ' : ', 'سرو')]
        self.assertEqual(result, expected)

    def test_bearish_and_hammer_and_engulfing(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_hammer_and_engulfing()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'كپرور')]
        self.assertEqual(result, expected)

    def test_bearish_and_engulfing_and_volume(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_engulfing_and_volume()
        expected = [(1, ' : ', 'زماهان'), (2, ' : ', 'واتي'), (3, ' : ', 'شيران'), (4, ' : ', 'اتكاي'),
                    (5, ' : ', 'كايتا'), (6, ' : ', 'كاذر'), (7, ' : ', 'فسرب'), (8, ' : ', 'سرو')]
        self.assertEqual(result, expected)

    def test_piercing_pattern_print(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.piercing_pattern_print()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'كدما'), (3, ' : ', 'حتايد'), (4, ' : ', 'زماهان'),
                    (5, ' : ', 'فخاس'), (6, ' : ', 'شگويا'), (7, ' : ', 'زكشت'), (8, ' : ', 'بالاس'),
                    (9, ' : ', 'غگلپا'), (10, ' : ', 'فالوم'), (11, ' : ', 'فاراك'), (12, ' : ', 'شغدير'),
                    (13, ' : ', 'كروي'), (14, ' : ', 'كپرور'), (15, ' : ', 'زدشت'), (16, ' : ', 'وهور'),
                    (17, ' : ', 'جم پيلن'), (18, ' : ', 'شسينا'), (19, ' : ', 'ثنوسا'), (20, ' : ', 'واتي'),
                    (21, ' : ', 'دشيمي'), (22, ' : ', 'خچرخش'), (23, ' : ', 'غاذر'), (24, ' : ', 'شيران'),
                    (25, ' : ', 'اتكاي'), (26, ' : ', 'تپمپي'), (27, ' : ', 'هاي وب'), (28, ' : ', 'خراسان'),
                    (29, ' : ', 'ودي'), (30, ' : ', 'شرانل'), (31, ' : ', 'ثنظام'), (32, ' : ', 'ولساپا'),
                    (33, ' : ', 'كايتا'), (34, ' : ', 'دسانكو'), (35, ' : ', 'كاذر'), (36, ' : ', 'بوعلي'),
                    (37, ' : ', 'تكنار'), (38, ' : ', 'فسرب'), (39, ' : ', 'زبينا'), (40, ' : ', 'فتوسا'),
                    (41, ' : ', 'خكار'), (42, ' : ', 'گنگين'), (43, ' : ', 'ولكار'), (44, ' : ', 'شكلر'),
                    (45, ' : ', 'سرو'), (46, ' : ', 'كماسه')]
        self.assertEqual(result, expected)

    def test_bearish_and_piercing_pattern(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_piercing_pattern()
        expected = [(1, ' : ', 'وسپه'), (2, ' : ', 'كدما'), (3, ' : ', 'حتايد'), (4, ' : ', 'زماهان'),
                    (5, ' : ', 'فخاس'), (6, ' : ', 'شگويا'), (7, ' : ', 'زكشت'), (8, ' : ', 'بالاس'),
                    (9, ' : ', 'غگلپا'), (10, ' : ', 'فالوم'), (11, ' : ', 'فاراك'), (12, ' : ', 'شغدير'),
                    (13, ' : ', 'كروي'), (14, ' : ', 'كپرور'), (15, ' : ', 'زدشت'), (16, ' : ', 'وهور'),
                    (17, ' : ', 'واتي'), (18, ' : ', 'دشيمي'), (19, ' : ', 'خچرخش'), (20, ' : ', 'غاذر'),
                    (21, ' : ', 'شيران'), (22, ' : ', 'اتكاي'), (23, ' : ', 'هاي وب'), (24, ' : ', 'خراسان'),
                    (25, ' : ', 'ودي'), (26, ' : ', 'ثنظام'), (27, ' : ', 'ولساپا'), (28, ' : ', 'كايتا'),
                    (29, ' : ', 'دسانكو'), (30, ' : ', 'كاذر'), (31, ' : ', 'بوعلي'), (32, ' : ', 'فسرب'),
                    (33, ' : ', 'زبينا'), (34, ' : ', 'فتوسا'), (35, ' : ', 'خكار'), (36, ' : ', 'گنگين'),
                    (37, ' : ', 'ولكار'), (38, ' : ', 'شكلر'), (39, ' : ', 'سرو'), (40, ' : ', 'كماسه')]
        self.assertEqual(result, expected)

    def test_bearish_and_piercing_pattern_and_volume(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_piercing_pattern_and_volume()
        expected = [(1, ' : ', 'زماهان'), (2, ' : ', 'شگويا'), (3, ' : ', 'فاراك'), (4, ' : ', 'كروي'),
                    (5, ' : ', 'واتي'), (6, ' : ', 'شيران'), (7, ' : ', 'اتكاي'), (8, ' : ', 'ودي'),
                    (9, ' : ', 'كايتا'), (10, ' : ', 'كاذر'), (11, ' : ', 'بوعلي'), (12, ' : ', 'فسرب'),
                    (13, ' : ', 'شكلر'), (14, ' : ', 'سرو')]
        self.assertEqual(result, expected)

    def test_bearish_and_morning_star(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_and_morning_star()
        expected = [(1, ' : ', 'شستا'), (2, ' : ', 'اطلس'), (3, ' : ', 'قزوين'), (4, ' : ', 'نوري'),
                    (5, ' : ', 'آتيمس'), (6, ' : ', 'ثفارس'), (7, ' : ', 'فملي'), (8, ' : ', 'قمرو'),
                    (9, ' : ', 'كايتا'), (10, ' : ', 'وتوكا'), (11, ' : ', 'سيستم'), (12, ' : ', 'فسرب'),
                    (13, ' : ', 'زبينا'), (14, ' : ', 'دارا يكم'), (15, ' : ', 'كاردان'), (16, ' : ', 'كاريس')]
        self.assertEqual(result, expected)

    def test_bearish_engulfing_print(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.bearish_engulfing_print()
        expected = [(1, ' : ', 'تكنو'), (2, ' : ', 'دسبحان'), (3, ' : ', 'سكارون'), (4, ' : ', 'ثاميد'),
                    (5, ' : ', 'شپديس'), (6, ' : ', 'حتوكا'), (7, ' : ', 'ولغدر'), (8, ' : ', 'وسنا'),
                    (9, ' : ', 'غشان'), (10, ' : ', 'وپارس'), (11, ' : ', 'سمازن'), (12, ' : ', 'آسام'),
                    (13, ' : ', 'سنوين'), (14, ' : ', 'رتاپ'), (15, ' : ', 'دحاوي'), (16, ' : ', 'وسينا'),
                    (17, ' : ', 'وثوق'), (18, ' : ', 'اخزا9092'), (19, ' : ', 'قنيشا'), (20, ' : ', 'غگلستا'),
                    (21, ' : ', 'دپارس'), (22, ' : ', 'قشير'), (23, ' : ', 'ولصنم')]
        self.assertEqual(result, expected)

    def test_hammer_and_bearish_engulfing(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.hammer_and_bearish_engulfing()
        expected = [(1, ' : ', 'وسنا'), (2, ' : ', 'سمازن'), (3, ' : ', 'سنوين')]
        self.assertEqual(result, expected)

    def test_full_time_buy_queue(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.full_time_buy_queue()
        expected = [(1, ' : ', 'فملي2'), (2, ' : ', 'لپيام'), (3, ' : ', 'ثاصفا'), (4, ' : ', 'مكرما034'),
                    (5, ' : ', 'سكه0111پ05'), (6, ' : ', 'اخزا906'), (7, ' : ', 'كسرام'), (8, ' : ', 'فسديد'),
                    (9, ' : ', 'آرمان'), (10, ' : ', 'وثخوز'), (11, ' : ', 'اوصتا4'), (12, ' : ', 'صفارس307'),
                    (13, ' : ', 'اخزا907'), (14, ' : ', 'دومينو4'), (15, ' : ', 'كفرآور'), (16, ' : ', 'خليبل'),
                    (17, ' : ', 'معيار '), (18, ' : ', 'غگز'), (19, ' : ', 'سكه0112پ03'), (20, ' : ', 'گپارس'),
                    (21, ' : ', 'پارسا306'), (22, ' : ', 'فولاد2'), (23, ' : ', 'شزنگ'), (24, ' : ', 'شتولي'),
                    (25, ' : ', 'اراد23'), (26, ' : ', 'اعتماد4')]
        self.assertEqual(result, expected)

    def test_full_time_sell_queue(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.full_time_sell_queue()
        expected = [(1, ' : ', 'اخزا821'), (2, ' : ', 'فبستم'), (3, ' : ', 'آبين'), (4, ' : ', 'شپديس2'),
                    (5, ' : ', 'داسوه'), (6, ' : ', 'ولراز'), (7, ' : ', 'تمحركه'), (8, ' : ', 'فلامي'),
                    (9, ' : ', 'كهرام'), (10, ' : ', 'سپرمي'), (11, ' : ', 'اعتماد2'), (12, ' : ', 'ثجوان'),
                    (13, ' : ', 'عيار2'), (14, ' : ', 'سمايه'), (15, ' : ', 'گكيش'), (16, ' : ', 'پارند2'),
                    (17, ' : ', 'كيان2'), (18, ' : ', 'واحصا'), (19, ' : ', 'بتك'), (20, ' : ', 'فنفت'),
                    (21, ' : ', 'وبرق'), (22, ' : ', 'فجوش'), (23, ' : ', 'افران2'), (24, ' : ', 'خكاوه'),
                    (25, ' : ', 'اخزا911'), (26, ' : ', 'آوا2'), (27, ' : ', 'فكمند')]
        self.assertEqual(result, expected)

    def test_full_time_buy_queue_with_shadow(self):
        stg = Strategies(20230219, self.getDataDB)
        result = stg.full_time_buy_queue_with_shadow()
        expected = [(1, ' : ', 'سپيدما'), (2, ' : ', 'سفارود'), (3, ' : ', 'ورنا'), (4, ' : ', 'دسينا'),
                    (5, ' : ', 'ثبهساز'), (6, ' : ', 'افق ملت'), (7, ' : ', 'غپينو'), (8, ' : ', 'آساميد'),
                    (9, ' : ', 'كساپا'), (10, ' : ', 'آكورد'), (11, ' : ', 'دمعيار'), (12, ' : ', 'ثتوسا'),
                    (13, ' : ', 'چكارن'), (14, ' : ', 'فن آوا'), (15, ' : ', 'كباده'), (16, ' : ', 'امين'),
                    (17, ' : ', 'زنگان')]
        self.assertEqual(result, expected)

    def test_check(self):
        stg = Strategies(20230219, self.getDataDB)
        data = [('Melli.Mortgage1803', '20180429', '633270.00', '633270.00', '633270.00', '633270.00', '1899810',
                 '3', '1', 'D', '661034.00', '633270.00', '143187001116603', 'تملي612',
                 'تسهيلات مسكن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180501', '654000.00', '654000.00', '654000.00', '654000.00', '12426000',
                 '19', '1', 'D', '633270.00', '654000.00', '143187001116603', 'تملي612',
                 'تسهيلات مسكن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180506', '660000.00', '660000.00', '660000.00', '660000.00', '2640000',
                 '4', '1', 'D', '654000.00', '660000.00', '143187001116603', 'تملي612',
                 'تسهيلات مسكن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180512', '665000.00', '665001.00', '665000.00', '665000.00', '16625007', '25',
                 '2', 'D', '660000.00', '665001.00', '143187001116603', 'تملي612', 'تسهيلات مسكن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180514', '666000.00', '666000.00', '666000.00', '666000.00', '31968000',
                 '48', '1', 'D', '665000.00', '666000.00', '143187001116603', 'تملي612',
                 'تسهيلات مسن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180515', '665000.00', '665000.00', '665000.00', '665000.00', '2660000', '4',
                 '1', 'D', '666000.00', '665000.00', '143187001116603', 'تملي612', 'تسهيلات مسكن بانك ملي-اسفند96'),
                ('Melli.Mortgage1803', '20180520', '663000.00', '663000.00', '663000.00', '663000.00', '6630000', '10',
                 '1', 'D', '665000.00', '663000.00', '143187001116603', 'تملي612', 'تسهيلات مسكن بانك ملي-اسفند96')]
        result = stg.check(data)
        expected = -1
        self.assertEqual(result, expected)
